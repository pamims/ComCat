// <auto-generated />
using ComCat.Services.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ComCat.Migrations
{
    [DbContext(typeof(LDbContext))]
    [Migration("20210923104713_MakeTestDB")]
    partial class MakeTestDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("Liber.Services.Infrastructure.Member", b =>
                {
                    b.Property<ulong>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Coins")
                        .HasColumnType("decimal(18, 10)");

                    b.HasKey("MemberID");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Liber.Services.Infrastructure.Server", b =>
                {
                    b.Property<ulong>("ServerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("ServerID");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Liber.Services.Infrastructure.ServerMember", b =>
                {
                    b.Property<ulong>("ServerID")
                        .HasColumnType("INTEGER");

                    b.Property<ulong>("MemberID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("NumPosts")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SmoothMovingAverage")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("ServerID", "MemberID");

                    b.HasIndex("MemberID");

                    b.ToTable("ServerMembers");
                });

            modelBuilder.Entity("Liber.Services.Infrastructure.ServerMember", b =>
                {
                    b.HasOne("Liber.Services.Infrastructure.Member", "Member")
                        .WithMany("Servers")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Liber.Services.Infrastructure.Server", "Server")
                        .WithMany("Members")
                        .HasForeignKey("ServerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Liber.Services.Infrastructure.Member", b =>
                {
                    b.Navigation("Servers");
                });

            modelBuilder.Entity("Liber.Services.Infrastructure.Server", b =>
                {
                    b.Navigation("Members");
                });
#pragma warning restore 612, 618
        }
    }
}
